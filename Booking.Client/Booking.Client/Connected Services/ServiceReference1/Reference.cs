//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Booking.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CPRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CPR {
            get {
                return this.CPRField;
            }
            set {
                if ((this.CPRField.Equals(value) != true)) {
                    this.CPRField = value;
                    this.RaisePropertyChanged("CPR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((this.ZipcodeField.Equals(value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bookings", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Bookings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.Destination EndDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.Destination StartDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.Destination EndDestination {
            get {
                return this.EndDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDestinationField, value) != true)) {
                    this.EndDestinationField = value;
                    this.RaisePropertyChanged("EndDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.Destination StartDestination {
            get {
                return this.StartDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDestinationField, value) != true)) {
                    this.StartDestinationField = value;
                    this.RaisePropertyChanged("StartDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Destination", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Destination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Passenger", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Passenger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CPRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LuggageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PassportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.Seat SeatNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CPR {
            get {
                return this.CPRField;
            }
            set {
                if ((this.CPRField.Equals(value) != true)) {
                    this.CPRField = value;
                    this.RaisePropertyChanged("CPR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Luggage {
            get {
                return this.LuggageField;
            }
            set {
                if ((this.LuggageField.Equals(value) != true)) {
                    this.LuggageField = value;
                    this.RaisePropertyChanged("Luggage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PassportId {
            get {
                return this.PassportIdField;
            }
            set {
                if ((this.PassportIdField.Equals(value) != true)) {
                    this.PassportIdField = value;
                    this.RaisePropertyChanged("PassportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.Seat SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatNumberField, value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Availability {
            get {
                return this.AvailabilityField;
            }
            set {
                if ((this.AvailabilityField.Equals(value) != true)) {
                    this.AvailabilityField = value;
                    this.RaisePropertyChanged("Availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plane", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Plane : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.Row[] RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.SeatSchema[] SeatSchemaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.Row[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.SeatSchema[] SeatSchema {
            get {
                return this.SeatSchemaField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatSchemaField, value) != true)) {
                    this.SeatSchemaField = value;
                    this.RaisePropertyChanged("SeatSchema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Row", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Row : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.ServiceReference1.Seat[] SeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((this.SeatNumberField.Equals(value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.ServiceReference1.Seat[] Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeatSchema", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class SeatSchema : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Layout {
            get {
                return this.LayoutField;
            }
            set {
                if ((object.ReferenceEquals(this.LayoutField, value) != true)) {
                    this.LayoutField = value;
                    this.RaisePropertyChanged("Layout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Post", ReplyAction="http://tempuri.org/IService/PostResponse")]
        string Post(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Post", ReplyAction="http://tempuri.org/IService/PostResponse")]
        System.Threading.Tasks.Task<string> PostAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoute", ReplyAction="http://tempuri.org/IService/GetRouteResponse")]
        string[] GetRoute(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoute", ReplyAction="http://tempuri.org/IService/GetRouteResponse")]
        System.Threading.Tasks.Task<string[]> GetRouteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        void CreateCustomer(Booking.Client.ServiceReference1.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        System.Threading.Tasks.Task CreateCustomerAsync(Booking.Client.ServiceReference1.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        Booking.Client.ServiceReference1.Customer GetCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Customer> GetCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        void UpdateCustomer(Booking.Client.ServiceReference1.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(Booking.Client.ServiceReference1.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        void DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBooking", ReplyAction="http://tempuri.org/IService/CreateBookingResponse")]
        void CreateBooking(Booking.Client.ServiceReference1.Bookings obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBooking", ReplyAction="http://tempuri.org/IService/CreateBookingResponse")]
        System.Threading.Tasks.Task CreateBookingAsync(Booking.Client.ServiceReference1.Bookings obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooking", ReplyAction="http://tempuri.org/IService/GetBookingResponse")]
        Booking.Client.ServiceReference1.Bookings GetBooking(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooking", ReplyAction="http://tempuri.org/IService/GetBookingResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Bookings> GetBookingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateBooking", ReplyAction="http://tempuri.org/IService/UpdateBookingResponse")]
        void UpdateBooking(Booking.Client.ServiceReference1.Bookings obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateBooking", ReplyAction="http://tempuri.org/IService/UpdateBookingResponse")]
        System.Threading.Tasks.Task UpdateBookingAsync(Booking.Client.ServiceReference1.Bookings obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBooking", ReplyAction="http://tempuri.org/IService/DeleteBookingResponse")]
        void DeleteBooking(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBooking", ReplyAction="http://tempuri.org/IService/DeleteBookingResponse")]
        System.Threading.Tasks.Task DeleteBookingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCity", ReplyAction="http://tempuri.org/IService/CreateCityResponse")]
        void CreateCity(Booking.Client.ServiceReference1.City obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCity", ReplyAction="http://tempuri.org/IService/CreateCityResponse")]
        System.Threading.Tasks.Task CreateCityAsync(Booking.Client.ServiceReference1.City obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCity", ReplyAction="http://tempuri.org/IService/GetCityResponse")]
        Booking.Client.ServiceReference1.City GetCity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCity", ReplyAction="http://tempuri.org/IService/GetCityResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.City> GetCityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCity", ReplyAction="http://tempuri.org/IService/UpdateCityResponse")]
        void UpdateCity(Booking.Client.ServiceReference1.City obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCity", ReplyAction="http://tempuri.org/IService/UpdateCityResponse")]
        System.Threading.Tasks.Task UpdateCityAsync(Booking.Client.ServiceReference1.City obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCity", ReplyAction="http://tempuri.org/IService/DeleteCityResponse")]
        void DeleteCity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCity", ReplyAction="http://tempuri.org/IService/DeleteCityResponse")]
        System.Threading.Tasks.Task DeleteCityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDestination", ReplyAction="http://tempuri.org/IService/CreateDestinationResponse")]
        void CreateDestination(Booking.Client.ServiceReference1.Destination obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDestination", ReplyAction="http://tempuri.org/IService/CreateDestinationResponse")]
        System.Threading.Tasks.Task CreateDestinationAsync(Booking.Client.ServiceReference1.Destination obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDestination", ReplyAction="http://tempuri.org/IService/GetDestinationResponse")]
        Booking.Client.ServiceReference1.Destination GetDestination(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDestination", ReplyAction="http://tempuri.org/IService/GetDestinationResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Destination> GetDestinationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateDestination", ReplyAction="http://tempuri.org/IService/UpdateDestinationResponse")]
        void UpdateDestination(Booking.Client.ServiceReference1.Destination obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateDestination", ReplyAction="http://tempuri.org/IService/UpdateDestinationResponse")]
        System.Threading.Tasks.Task UpdateDestinationAsync(Booking.Client.ServiceReference1.Destination obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDestination", ReplyAction="http://tempuri.org/IService/DeleteDestinationResponse")]
        void DeleteDestination(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDestination", ReplyAction="http://tempuri.org/IService/DeleteDestinationResponse")]
        System.Threading.Tasks.Task DeleteDestinationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePassenger", ReplyAction="http://tempuri.org/IService/CreatePassengerResponse")]
        void CreatePassenger(Booking.Client.ServiceReference1.Passenger obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePassenger", ReplyAction="http://tempuri.org/IService/CreatePassengerResponse")]
        System.Threading.Tasks.Task CreatePassengerAsync(Booking.Client.ServiceReference1.Passenger obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassenger", ReplyAction="http://tempuri.org/IService/GetPassengerResponse")]
        Booking.Client.ServiceReference1.Passenger GetPassenger(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassenger", ReplyAction="http://tempuri.org/IService/GetPassengerResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Passenger> GetPassengerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePassenger", ReplyAction="http://tempuri.org/IService/UpdatePassengerResponse")]
        void UpdatePassenger(Booking.Client.ServiceReference1.Passenger obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePassenger", ReplyAction="http://tempuri.org/IService/UpdatePassengerResponse")]
        System.Threading.Tasks.Task UpdatePassengerAsync(Booking.Client.ServiceReference1.Passenger obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePassenger", ReplyAction="http://tempuri.org/IService/DeletePassengerResponse")]
        void DeletePassenger(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePassenger", ReplyAction="http://tempuri.org/IService/DeletePassengerResponse")]
        System.Threading.Tasks.Task DeletePassengerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePayment", ReplyAction="http://tempuri.org/IService/CreatePaymentResponse")]
        void CreatePayment(Booking.Client.ServiceReference1.Payment obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePayment", ReplyAction="http://tempuri.org/IService/CreatePaymentResponse")]
        System.Threading.Tasks.Task CreatePaymentAsync(Booking.Client.ServiceReference1.Payment obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPayment", ReplyAction="http://tempuri.org/IService/GetPaymentResponse")]
        Booking.Client.ServiceReference1.Payment GetPayment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPayment", ReplyAction="http://tempuri.org/IService/GetPaymentResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Payment> GetPaymentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePayment", ReplyAction="http://tempuri.org/IService/UpdatePaymentResponse")]
        void UpdatePayment(Booking.Client.ServiceReference1.Payment obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePayment", ReplyAction="http://tempuri.org/IService/UpdatePaymentResponse")]
        System.Threading.Tasks.Task UpdatePaymentAsync(Booking.Client.ServiceReference1.Payment obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePayment", ReplyAction="http://tempuri.org/IService/DeletePaymentResponse")]
        void DeletePayment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePayment", ReplyAction="http://tempuri.org/IService/DeletePaymentResponse")]
        System.Threading.Tasks.Task DeletePaymentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePlane", ReplyAction="http://tempuri.org/IService/CreatePlaneResponse")]
        void CreatePlane(Booking.Client.ServiceReference1.Plane obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePlane", ReplyAction="http://tempuri.org/IService/CreatePlaneResponse")]
        System.Threading.Tasks.Task CreatePlaneAsync(Booking.Client.ServiceReference1.Plane obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlane", ReplyAction="http://tempuri.org/IService/GetPlaneResponse")]
        Booking.Client.ServiceReference1.Plane GetPlane(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlane", ReplyAction="http://tempuri.org/IService/GetPlaneResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Plane> GetPlaneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePlane", ReplyAction="http://tempuri.org/IService/UpdatePlaneResponse")]
        void UpdatePlane(Booking.Client.ServiceReference1.Plane obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePlane", ReplyAction="http://tempuri.org/IService/UpdatePlaneResponse")]
        System.Threading.Tasks.Task UpdatePlaneAsync(Booking.Client.ServiceReference1.Plane obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlane", ReplyAction="http://tempuri.org/IService/DeletePlaneResponse")]
        void DeletePlane(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlane", ReplyAction="http://tempuri.org/IService/DeletePlaneResponse")]
        System.Threading.Tasks.Task DeletePlaneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateRow", ReplyAction="http://tempuri.org/IService/CreateRowResponse")]
        void CreateRow(Booking.Client.ServiceReference1.Row obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateRow", ReplyAction="http://tempuri.org/IService/CreateRowResponse")]
        System.Threading.Tasks.Task CreateRowAsync(Booking.Client.ServiceReference1.Row obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRow", ReplyAction="http://tempuri.org/IService/GetRowResponse")]
        Booking.Client.ServiceReference1.Row GetRow(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRow", ReplyAction="http://tempuri.org/IService/GetRowResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Row> GetRowAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRow", ReplyAction="http://tempuri.org/IService/UpdateRowResponse")]
        void UpdateRow(Booking.Client.ServiceReference1.Row obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRow", ReplyAction="http://tempuri.org/IService/UpdateRowResponse")]
        System.Threading.Tasks.Task UpdateRowAsync(Booking.Client.ServiceReference1.Row obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRow", ReplyAction="http://tempuri.org/IService/DeleteRowResponse")]
        void DeleteRow(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRow", ReplyAction="http://tempuri.org/IService/DeleteRowResponse")]
        System.Threading.Tasks.Task DeleteRowAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeat", ReplyAction="http://tempuri.org/IService/CreateSeatResponse")]
        void CreateSeat(Booking.Client.ServiceReference1.Seat obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeat", ReplyAction="http://tempuri.org/IService/CreateSeatResponse")]
        System.Threading.Tasks.Task CreateSeatAsync(Booking.Client.ServiceReference1.Seat obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSeat", ReplyAction="http://tempuri.org/IService/GetSeatResponse")]
        Booking.Client.ServiceReference1.Seat GetSeat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSeat", ReplyAction="http://tempuri.org/IService/GetSeatResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Seat> GetSeatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeat", ReplyAction="http://tempuri.org/IService/UpdateSeatResponse")]
        void UpdateSeat(Booking.Client.ServiceReference1.Seat obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeat", ReplyAction="http://tempuri.org/IService/UpdateSeatResponse")]
        System.Threading.Tasks.Task UpdateSeatAsync(Booking.Client.ServiceReference1.Seat obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeat", ReplyAction="http://tempuri.org/IService/DeleteSeatResponse")]
        void DeleteSeat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeat", ReplyAction="http://tempuri.org/IService/DeleteSeatResponse")]
        System.Threading.Tasks.Task DeleteSeatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeatSchema", ReplyAction="http://tempuri.org/IService/CreateSeatSchemaResponse")]
        void CreateSeatSchema(Booking.Client.ServiceReference1.SeatSchema obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeatSchema", ReplyAction="http://tempuri.org/IService/CreateSeatSchemaResponse")]
        System.Threading.Tasks.Task CreateSeatSchemaAsync(Booking.Client.ServiceReference1.SeatSchema obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetSchema", ReplyAction="http://tempuri.org/IService/GetSetSchemaResponse")]
        Booking.Client.ServiceReference1.SeatSchema GetSetSchema(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetSchema", ReplyAction="http://tempuri.org/IService/GetSetSchemaResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.SeatSchema> GetSetSchemaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeatSchema", ReplyAction="http://tempuri.org/IService/UpdateSeatSchemaResponse")]
        void UpdateSeatSchema(Booking.Client.ServiceReference1.SeatSchema obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeatSchema", ReplyAction="http://tempuri.org/IService/UpdateSeatSchemaResponse")]
        System.Threading.Tasks.Task UpdateSeatSchemaAsync(Booking.Client.ServiceReference1.SeatSchema obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeatSchema", ReplyAction="http://tempuri.org/IService/DeleteSeatSchemaResponse")]
        void DeleteSeatSchema(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeatSchema", ReplyAction="http://tempuri.org/IService/DeleteSeatSchemaResponse")]
        System.Threading.Tasks.Task DeleteSeatSchemaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTicket", ReplyAction="http://tempuri.org/IService/CreateTicketResponse")]
        void CreateTicket(Booking.Client.ServiceReference1.Ticket obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTicket", ReplyAction="http://tempuri.org/IService/CreateTicketResponse")]
        System.Threading.Tasks.Task CreateTicketAsync(Booking.Client.ServiceReference1.Ticket obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTicket", ReplyAction="http://tempuri.org/IService/GetTicketResponse")]
        Booking.Client.ServiceReference1.Ticket GetTicket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTicket", ReplyAction="http://tempuri.org/IService/GetTicketResponse")]
        System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Ticket> GetTicketAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTicket", ReplyAction="http://tempuri.org/IService/UpdateTicketResponse")]
        void UpdateTicket(Booking.Client.ServiceReference1.Ticket obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTicket", ReplyAction="http://tempuri.org/IService/UpdateTicketResponse")]
        System.Threading.Tasks.Task UpdateTicketAsync(Booking.Client.ServiceReference1.Ticket obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTicket", ReplyAction="http://tempuri.org/IService/DeleteTicketResponse")]
        void DeleteTicket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTicket", ReplyAction="http://tempuri.org/IService/DeleteTicketResponse")]
        System.Threading.Tasks.Task DeleteTicketAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Booking.Client.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Booking.Client.ServiceReference1.IService>, Booking.Client.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Post(string s) {
            return base.Channel.Post(s);
        }
        
        public System.Threading.Tasks.Task<string> PostAsync(string s) {
            return base.Channel.PostAsync(s);
        }
        
        public string[] GetRoute(string id) {
            return base.Channel.GetRoute(id);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRouteAsync(string id) {
            return base.Channel.GetRouteAsync(id);
        }
        
        public void CreateCustomer(Booking.Client.ServiceReference1.Customer obj) {
            base.Channel.CreateCustomer(obj);
        }
        
        public System.Threading.Tasks.Task CreateCustomerAsync(Booking.Client.ServiceReference1.Customer obj) {
            return base.Channel.CreateCustomerAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Customer GetCustomer(int id) {
            return base.Channel.GetCustomer(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Customer> GetCustomerAsync(int id) {
            return base.Channel.GetCustomerAsync(id);
        }
        
        public void UpdateCustomer(Booking.Client.ServiceReference1.Customer obj) {
            base.Channel.UpdateCustomer(obj);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(Booking.Client.ServiceReference1.Customer obj) {
            return base.Channel.UpdateCustomerAsync(obj);
        }
        
        public void DeleteCustomer(int id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public void CreateBooking(Booking.Client.ServiceReference1.Bookings obj) {
            base.Channel.CreateBooking(obj);
        }
        
        public System.Threading.Tasks.Task CreateBookingAsync(Booking.Client.ServiceReference1.Bookings obj) {
            return base.Channel.CreateBookingAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Bookings GetBooking(int id) {
            return base.Channel.GetBooking(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Bookings> GetBookingAsync(int id) {
            return base.Channel.GetBookingAsync(id);
        }
        
        public void UpdateBooking(Booking.Client.ServiceReference1.Bookings obj) {
            base.Channel.UpdateBooking(obj);
        }
        
        public System.Threading.Tasks.Task UpdateBookingAsync(Booking.Client.ServiceReference1.Bookings obj) {
            return base.Channel.UpdateBookingAsync(obj);
        }
        
        public void DeleteBooking(int id) {
            base.Channel.DeleteBooking(id);
        }
        
        public System.Threading.Tasks.Task DeleteBookingAsync(int id) {
            return base.Channel.DeleteBookingAsync(id);
        }
        
        public void CreateCity(Booking.Client.ServiceReference1.City obj) {
            base.Channel.CreateCity(obj);
        }
        
        public System.Threading.Tasks.Task CreateCityAsync(Booking.Client.ServiceReference1.City obj) {
            return base.Channel.CreateCityAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.City GetCity(int id) {
            return base.Channel.GetCity(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.City> GetCityAsync(int id) {
            return base.Channel.GetCityAsync(id);
        }
        
        public void UpdateCity(Booking.Client.ServiceReference1.City obj) {
            base.Channel.UpdateCity(obj);
        }
        
        public System.Threading.Tasks.Task UpdateCityAsync(Booking.Client.ServiceReference1.City obj) {
            return base.Channel.UpdateCityAsync(obj);
        }
        
        public void DeleteCity(int id) {
            base.Channel.DeleteCity(id);
        }
        
        public System.Threading.Tasks.Task DeleteCityAsync(int id) {
            return base.Channel.DeleteCityAsync(id);
        }
        
        public void CreateDestination(Booking.Client.ServiceReference1.Destination obj) {
            base.Channel.CreateDestination(obj);
        }
        
        public System.Threading.Tasks.Task CreateDestinationAsync(Booking.Client.ServiceReference1.Destination obj) {
            return base.Channel.CreateDestinationAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Destination GetDestination(int id) {
            return base.Channel.GetDestination(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Destination> GetDestinationAsync(int id) {
            return base.Channel.GetDestinationAsync(id);
        }
        
        public void UpdateDestination(Booking.Client.ServiceReference1.Destination obj) {
            base.Channel.UpdateDestination(obj);
        }
        
        public System.Threading.Tasks.Task UpdateDestinationAsync(Booking.Client.ServiceReference1.Destination obj) {
            return base.Channel.UpdateDestinationAsync(obj);
        }
        
        public void DeleteDestination(int id) {
            base.Channel.DeleteDestination(id);
        }
        
        public System.Threading.Tasks.Task DeleteDestinationAsync(int id) {
            return base.Channel.DeleteDestinationAsync(id);
        }
        
        public void CreatePassenger(Booking.Client.ServiceReference1.Passenger obj) {
            base.Channel.CreatePassenger(obj);
        }
        
        public System.Threading.Tasks.Task CreatePassengerAsync(Booking.Client.ServiceReference1.Passenger obj) {
            return base.Channel.CreatePassengerAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Passenger GetPassenger(int id) {
            return base.Channel.GetPassenger(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Passenger> GetPassengerAsync(int id) {
            return base.Channel.GetPassengerAsync(id);
        }
        
        public void UpdatePassenger(Booking.Client.ServiceReference1.Passenger obj) {
            base.Channel.UpdatePassenger(obj);
        }
        
        public System.Threading.Tasks.Task UpdatePassengerAsync(Booking.Client.ServiceReference1.Passenger obj) {
            return base.Channel.UpdatePassengerAsync(obj);
        }
        
        public void DeletePassenger(int id) {
            base.Channel.DeletePassenger(id);
        }
        
        public System.Threading.Tasks.Task DeletePassengerAsync(int id) {
            return base.Channel.DeletePassengerAsync(id);
        }
        
        public void CreatePayment(Booking.Client.ServiceReference1.Payment obj) {
            base.Channel.CreatePayment(obj);
        }
        
        public System.Threading.Tasks.Task CreatePaymentAsync(Booking.Client.ServiceReference1.Payment obj) {
            return base.Channel.CreatePaymentAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Payment GetPayment(int id) {
            return base.Channel.GetPayment(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Payment> GetPaymentAsync(int id) {
            return base.Channel.GetPaymentAsync(id);
        }
        
        public void UpdatePayment(Booking.Client.ServiceReference1.Payment obj) {
            base.Channel.UpdatePayment(obj);
        }
        
        public System.Threading.Tasks.Task UpdatePaymentAsync(Booking.Client.ServiceReference1.Payment obj) {
            return base.Channel.UpdatePaymentAsync(obj);
        }
        
        public void DeletePayment(int id) {
            base.Channel.DeletePayment(id);
        }
        
        public System.Threading.Tasks.Task DeletePaymentAsync(int id) {
            return base.Channel.DeletePaymentAsync(id);
        }
        
        public void CreatePlane(Booking.Client.ServiceReference1.Plane obj) {
            base.Channel.CreatePlane(obj);
        }
        
        public System.Threading.Tasks.Task CreatePlaneAsync(Booking.Client.ServiceReference1.Plane obj) {
            return base.Channel.CreatePlaneAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Plane GetPlane(int id) {
            return base.Channel.GetPlane(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Plane> GetPlaneAsync(int id) {
            return base.Channel.GetPlaneAsync(id);
        }
        
        public void UpdatePlane(Booking.Client.ServiceReference1.Plane obj) {
            base.Channel.UpdatePlane(obj);
        }
        
        public System.Threading.Tasks.Task UpdatePlaneAsync(Booking.Client.ServiceReference1.Plane obj) {
            return base.Channel.UpdatePlaneAsync(obj);
        }
        
        public void DeletePlane(int id) {
            base.Channel.DeletePlane(id);
        }
        
        public System.Threading.Tasks.Task DeletePlaneAsync(int id) {
            return base.Channel.DeletePlaneAsync(id);
        }
        
        public void CreateRow(Booking.Client.ServiceReference1.Row obj) {
            base.Channel.CreateRow(obj);
        }
        
        public System.Threading.Tasks.Task CreateRowAsync(Booking.Client.ServiceReference1.Row obj) {
            return base.Channel.CreateRowAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Row GetRow(int id) {
            return base.Channel.GetRow(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Row> GetRowAsync(int id) {
            return base.Channel.GetRowAsync(id);
        }
        
        public void UpdateRow(Booking.Client.ServiceReference1.Row obj) {
            base.Channel.UpdateRow(obj);
        }
        
        public System.Threading.Tasks.Task UpdateRowAsync(Booking.Client.ServiceReference1.Row obj) {
            return base.Channel.UpdateRowAsync(obj);
        }
        
        public void DeleteRow(int id) {
            base.Channel.DeleteRow(id);
        }
        
        public System.Threading.Tasks.Task DeleteRowAsync(int id) {
            return base.Channel.DeleteRowAsync(id);
        }
        
        public void CreateSeat(Booking.Client.ServiceReference1.Seat obj) {
            base.Channel.CreateSeat(obj);
        }
        
        public System.Threading.Tasks.Task CreateSeatAsync(Booking.Client.ServiceReference1.Seat obj) {
            return base.Channel.CreateSeatAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Seat GetSeat(int id) {
            return base.Channel.GetSeat(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Seat> GetSeatAsync(int id) {
            return base.Channel.GetSeatAsync(id);
        }
        
        public void UpdateSeat(Booking.Client.ServiceReference1.Seat obj) {
            base.Channel.UpdateSeat(obj);
        }
        
        public System.Threading.Tasks.Task UpdateSeatAsync(Booking.Client.ServiceReference1.Seat obj) {
            return base.Channel.UpdateSeatAsync(obj);
        }
        
        public void DeleteSeat(int id) {
            base.Channel.DeleteSeat(id);
        }
        
        public System.Threading.Tasks.Task DeleteSeatAsync(int id) {
            return base.Channel.DeleteSeatAsync(id);
        }
        
        public void CreateSeatSchema(Booking.Client.ServiceReference1.SeatSchema obj) {
            base.Channel.CreateSeatSchema(obj);
        }
        
        public System.Threading.Tasks.Task CreateSeatSchemaAsync(Booking.Client.ServiceReference1.SeatSchema obj) {
            return base.Channel.CreateSeatSchemaAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.SeatSchema GetSetSchema(int id) {
            return base.Channel.GetSetSchema(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.SeatSchema> GetSetSchemaAsync(int id) {
            return base.Channel.GetSetSchemaAsync(id);
        }
        
        public void UpdateSeatSchema(Booking.Client.ServiceReference1.SeatSchema obj) {
            base.Channel.UpdateSeatSchema(obj);
        }
        
        public System.Threading.Tasks.Task UpdateSeatSchemaAsync(Booking.Client.ServiceReference1.SeatSchema obj) {
            return base.Channel.UpdateSeatSchemaAsync(obj);
        }
        
        public void DeleteSeatSchema(int id) {
            base.Channel.DeleteSeatSchema(id);
        }
        
        public System.Threading.Tasks.Task DeleteSeatSchemaAsync(int id) {
            return base.Channel.DeleteSeatSchemaAsync(id);
        }
        
        public void CreateTicket(Booking.Client.ServiceReference1.Ticket obj) {
            base.Channel.CreateTicket(obj);
        }
        
        public System.Threading.Tasks.Task CreateTicketAsync(Booking.Client.ServiceReference1.Ticket obj) {
            return base.Channel.CreateTicketAsync(obj);
        }
        
        public Booking.Client.ServiceReference1.Ticket GetTicket(int id) {
            return base.Channel.GetTicket(id);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.ServiceReference1.Ticket> GetTicketAsync(int id) {
            return base.Channel.GetTicketAsync(id);
        }
        
        public void UpdateTicket(Booking.Client.ServiceReference1.Ticket obj) {
            base.Channel.UpdateTicket(obj);
        }
        
        public System.Threading.Tasks.Task UpdateTicketAsync(Booking.Client.ServiceReference1.Ticket obj) {
            return base.Channel.UpdateTicketAsync(obj);
        }
        
        public void DeleteTicket(int id) {
            base.Channel.DeleteTicket(id);
        }
        
        public System.Threading.Tasks.Task DeleteTicketAsync(int id) {
            return base.Channel.DeleteTicketAsync(id);
        }
    }
}
